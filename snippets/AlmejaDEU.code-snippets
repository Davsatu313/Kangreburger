{
	// Place your alm workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	
	"ADD": {
        "prefix": "HINZUFÜGEN VON STRING1 ZU STRING2, ...",
        "body": [
            "HINZUFÜGEN VON ${1:STRING1} = ${2:STRING2} ,"
        ],
		"description": "Kopiert neue Dateien, Verzeichnisse oder Remote-Datei-URLs von <src> und fügt sie dem Dateisystem des Bildes unter dem Pfad <dest> hinzu.",
		
	},"ARG": {
        "prefix": "MIT DEN ARGUMENT- params",
        "body": [
            "MIT DEN ARGUMENT- ${1:params}"
        ],
		"description": "Definiert eine Variable, die Benutzer beim Erstellen mit dem Docker-Befehl build mit dem Flag --build-arg <varname> = <value> an den Builder übergeben können.",
		
	},
	"ARG1": {
        "prefix": "MIT DEN ARGUMENTEN param1, params2",
        "body": [
            "MIT DEN ARGUMENTEN ${1:params1}, ${2:params2}"
        ],
		"description": "Definiert eine Variable, die Benutzer beim Erstellen mit dem Docker-Befehl build mit dem Flag --build-arg <varname> = <value> an den Builder übergeben können.",
		
	},
	"CMD": {
        "prefix": "CMD",
        "body": [
            "${1:CMD}"
        ],
		"description": "CMD ANRUFEN",
		
	},
	"CONTAINERS": {
        "prefix": "BEHÄLTER",
        "body": [
            "BEHÄLTER ${1|STRING1,STRING1 STRING2|}"
        ],
		"description": "Erklärung einer Reihe von Containern",
		
	},"COPY": {
        "prefix": "KOPIEREN VON STRING1 ZU STRING2, ...",
        "body": [
            "KOPIEREN VON ${1:STRING1} = ${2:STRING2} ,"
        ],
		"description": "Kopiert neue Dateien oder Verzeichnisse aus <src> und fügt sie dem Dateisystem des Containers unter dem Pfad <dest> hinzu.",
		
	},
	"ENTRYPOINT": {
        "prefix": "ANFANG MIT params",
        "body": [
            "ANFANG MIT ${1:params}"
        ],
		"description": "Mit der Entrypoint-Deklaration können Sie einen Container konfigurieren, der als ausführbare Datei ausgeführt wird.",
		
	},
	"ENV": {
        "prefix": "MIT DEN UMWELTVARIABLEN params",
        "body": [
            "${1|MIT DER UMWELT VARIABEL params,MIT DEN UMWELTVARIABLEN params params|}"
        ],
		"description": "Setzt die Umgebungsvariable <key> auf den Wert <value>.",
		
	},
	"EXPOSE": {
        "prefix": "IM HAFEN params",
        "body": [
            "IM HAFEN ${1:params}"
        ],
		"description": "Informiert Docker, dass der Container zur Laufzeit die angegebenen Netzwerkports überwacht. Sie können angeben, ob der Port TCP oder UDP überwacht, und der Standardwert ist TCP, wenn das Protokoll nicht angegeben ist.",
		
	},
	"FROM": {
        "prefix": "DE images",
        "body": [
            "DE ${1:images}"
        ],
		"description": "Initialisiert eine neue Erstellungsphase und legt das Basis-Image für nachfolgende Anweisungen fest.",
		
	},
	"HEALTHCHECK": {
        "prefix": "paramas überprüfen",
        "body": [
            "MIT DEM ETIKETT ${1|NADA,params|}"
        ],
		"description": "Erklärt Docker, wie ein Container getestet werden soll, um zu überprüfen, ob er noch funktioniert.",
		
	},
	"IMAGES": {
        "prefix": "images",
        "body": [
            "${params}"
        ],
		"description": "Wird verwendet, um Code in einem Docker-Container auszuführen",
		
	},
	"INT": {
        "prefix": "int",
        "body": [
            "${1:n}"
        ],
		"description": "1 - 999999"
		
	},
	"LABEL1": {
        "prefix": "CON LA(S) ETIQUETA(S) STRING1 = STRING2...",
        "body": [
            "${1|MIT DEM STRING1 -ETIKETT = STRING2,MIT DEN ETIKETTEN STRING1 = STRING2|}",
        ],
		"description": "Fügt einem Bild Metadaten hinzu. Ein LABEL ist ein Schlüssel-Wert-Paar.",
		
	},

	"LABEL": {
        "prefix": "MIT DEM ETIKETT STRING1 = STRING2",
        "body": [
            "1|MIT DEM ETIKETT STRING1 = STRING2",
        ],
		"description": "Fügt einem Bild Metadaten hinzu. Ein LABEL ist ein Schlüssel-Wert-Paar.",
		
	},
	"LABEL_VARIOUS": {
        "prefix": "MIT DEN ETIKETTEN STRING1 = STRING2 ...",
        "body": [
            "MIT DEN ETIKETTEN ${1:STRING1} = ${2:STRING2} ,"
        ],
		"description": "Fügt einem Bild Metadaten hinzu. Ein LABEL ist ein Schlüssel-Wert-Paar.",
		
	},
	"MORE": {
		"prefix": ", STRING3 = STRING4",
		"body": [
			", ${1:STRING} = ${2:STRING}"
		],
		"description": ""
	},
	"ONBUILD": {
        "prefix": "BEIM GEBÄUDE STRING1 ",
        "body": [
            "BEIM GEBÄUDE ${1:STRING1}"
        ],
		"description": "Fügt dem Image eine Triggeranweisung hinzu, die zu einem späteren Zeitpunkt ausgeführt werden soll, wenn das Image als Basis für einen anderen Build verwendet wird.",
		
	},
	"PARAMS": {
        "prefix": "params",
        "body": [
            "${STRING} ,"
        ],
		"description": "PARAMETER",
		
	},
	"RUN": {
        "prefix": "SIE LAUFEN STRING ",
        "body": [
            "SIE LAUFEN ${1:STRING}"
        ],
		"description": "Führt alle Befehle in einer neuen Ebene über dem aktuellen Bild aus und schreibt die Ergebnisse fest. Das resultierende festgeschriebene Image wird für den nächsten Schritt in der Docker-Datei verwendet.",
		
	},
	"SHELL": {
        "prefix": "SHELL PARAMS",
        "body": [
            "SHELL ${1:PARAMS}"
        ],
		"description": "Ermöglicht das Überschreiben der Standard-Shell, die für die Shell-Befehlsform verwendet wird.",
		
	},
	"START_VARIOUS": {
        "prefix": "ICH BRAUCHE N BEHÄLTER VON",
        "body": [
            "ICH BRAUCHE $N ${1|CONTAINER,BEHÄLTER|} DE ${2:CONTAINER1, CONTAINER2...} :\r",
            
            "${3:CONTAINER1: }"
        ],
        "description": "ERSTE ERKLÄRUNG DES KÖRPERS DES DOCKERS",
        
	},
	"STOPSIGNAL": {
        "prefix": "STRING/INT STOPPEN",
        "body": [
            "STOPPEN ${1|STRING,INT|}"
        ],
		"description": "Legt das Systemaufrufsignal fest, das zum Beenden an den Container gesendet wird.",
		
	},
	"STRING": {
        "prefix": "STRING",
        "body": [
            "${nombre:STRING}"
        ],
		"description": " ((a-z)*(A-Z)* (. , _ -  “ ‘)(0-9)*)*",
		
	},
	"VOLUME_UBI": {
        "prefix": "ON LOCATION params",
        "body": [
            "ON LOCATION ${1:params}"
        ],
		"description": "Erstellt einen Bereitstellungspunkt mit dem angegebenen Namen und markiert ihn als Speicher für extern bereitgestellte Volumes von nativen Hosts oder anderen Containern.",
		
	},
	"USER": {
        "prefix": "FÜR DEN BENUTZER users",
        "body": [
            "FÜR DEN BENUTZER ${1:users}"
        ],
		"description": "Legt den Benutzernamen (oder die UID) und optional die Benutzergruppe (oder GID) fest, die beim Ausführen des Images und für alle darauf folgenden RUN-, CMD- und ENTRYPOINT-Anweisungen in der Docker-Datei verwendet werden soll.",
		
	},
	"VOLUME": {
        "prefix": "IM VOLUMEN params",
        "body": [
            "IM VOLUMEN ${1:params}"
        ],
		"description": "Erstellt einen Bereitstellungspunkt mit dem angegebenen Namen und markiert ihn als Speicher für extern bereitgestellte Volumes von nativen Hosts oder anderen Containern.",
		
	},
	"WORKDIR": {
        "prefix": "IM STRING-ARBEITSVERZEICHNIS",
        "body": [
            "IM ${1:STRING} -ARBEITSVERZEICHNIS"
        ],
		"description": "Legt das Arbeitsverzeichnis für alle Anweisungen RUN, CMD, ENTRYPOINT, COPY und ADD fest, die in der Docker-Datei darauf folgen.",
		
	},
  
}