{
	// Place your alm workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	
	"ADD": {
        "prefix": "AJOUTER DE LA STRING1 À LA STRING2, ...",
        "body": [
            "AJOUTER DE LA ${1:STRING1} = ${2:STRING2} ,"
        ],
		"description": "Copie les nouveaux fichiers, répertoires ou URL de fichiers distants à partir de <src> et les ajoute au système de fichiers de l'image au chemin <dest>.",
		
	},"ARG": {
        "prefix": "AVEC L'ARGUMENT params",
        "body": [
            "AVEC L'ARGUMENT ${1:params}"
        ],
		"description": "Définit une variable que les utilisateurs peuvent transmettre au moment de la construction au générateur avec la commande docker build en utilisant l'indicateur --build-arg <varname> = <value>.",
		
	},
	"ARG1": {
        "prefix": "AVEC LES ARGUMENTS param1, params2",
        "body": [
            "AVEC LES ARGUMENTS ${1:params1}, ${2:params2}"
        ],
		"description": "Définit une variable que les utilisateurs peuvent transmettre au moment de la construction au générateur avec la commande docker build en utilisant l'indicateur --build-arg <varname> = <value>.",
		
	},
	"CMD": {
        "prefix": "CMD",
        "body": [
            "${1:CMD}"
        ],
		"description": "APPELER CMD",
		
	},
	"CONTAINERS": {
        "prefix": "CONTENEURS",
        "body": [
            "CONTENEURS ${1|STRING1,STRING2 STRING2|}"
        ],
		"description": "Déclaration d'un certain nombre de conteneurs",
		
	},"COPY": {
        "prefix": "COPIE DE STRING1 EN STRING2, ...",
        "body": [
            "COPIE DE ${1:STRING1} = ${2:STRING2} ,"
        ],
		"description": "Copie les nouveaux fichiers ou répertoires de <src> et les ajoute au système de fichiers du conteneur au chemin <dest>.",
		
	},
	"ENTRYPOINT": {
        "prefix": "COMMENCER PAR LES params",
        "body": [
            "COMMENCER PAR LES ${1:params}"
        ],
		"description": "La déclaration Entrypoint vous permet de configurer un conteneur qui s'exécutera comme un exécutable.",
		
	},
	"ENV": {
        "prefix": "AVEC LES VARIABLES DE L'ENVIRONNEMENT params",
        "body": [
            "${1|AVEC LES VARIABLES DE L'ENVIRONNEMENT params,AVEC LES VARIABLES DE L'ENVIRONNEMENT params params|}"
        ],
		"description": "Définit la variable d'environnement <key> sur la valeur <value>.",
		
	},
	"EXPOSE": {
        "prefix": "AU PORT params",
        "body": [
            "AU PORT ${1:params}"
        ],
		"description": "Informe Docker que le conteneur écoute sur les ports réseau spécifiés lors de l'exécution. Vous pouvez spécifier si le port écoute sur TCP ou UDP, et la valeur par défaut est TCP si le protocole n'est pas spécifié.",
		
	},
	"FROM": {
        "prefix": "DE images",
        "body": [
            "DE ${1:images}"
        ],
		"description": "Initialise une nouvelle étape de construction et définit l'image de base pour les instructions suivantes.",
		
	},
	"HEALTHCHECK": {
        "prefix": "RÉVISION paramas",
        "body": [
            "AVEC L'ÉTIQUETTE ${1|NADA,params|}"
        ],
		"description": "Explique à Docker comment tester un conteneur pour vérifier qu'il fonctionne toujours.",
		
	},
	"IMAGES": {
        "prefix": "images",
        "body": [
            "${params}"
        ],
		"description": "Est utilisé pour exécuter du code dans un conteneur Docker",
		
	},
	"INT": {
        "prefix": "int",
        "body": [
            "${1:n}"
        ],
		"description": "1 - 999999"
		
	},
	"LABEL1": {
        "prefix": "AVEC DES ÉTIQUETTES STRING1 = STRING2...",
        "body": [
            "${1|AVEC L'ÉTIQUETTE STRING1 = STRING2,AVEC DES ÉTIQUETTES STRING1 = STRING2|}",
        ],
		"description": "Ajoute des métadonnées à une image. Un LABEL est une paire valeur / clé.",
		
	},

	"LABEL": {
        "prefix": "AVEC L'ÉTIQUETTE STRING1 = STRING2",
        "body": [
            "1|AVEC L'ÉTIQUETTE STRING1 = STRING2",
        ],
		"description": "Ajoute des métadonnées à une image. Un LABEL est une paire valeur / clé.",
		
	},
	"LABEL_VARIOUS": {
        "prefix": "AVEC DES ÉTIQUETTES STRING1 = STRING2 ...",
        "body": [
            "AVEC DES ÉTIQUETTES ${1:STRING1} = ${2:STRING2} ,"
        ],
		"description": "Ajoute des métadonnées à une image. Un LABEL est une paire valeur / clé.",
		
	},
	"MORE": {
		"prefix": ", STRING3 = STRING4",
		"body": [
			", ${1:STRING} = ${2:STRING}"
		],
		"description": ""
	},
	"ONBUILD": {
        "prefix": "LORS DE LA CONSTRUCTION DE LA STRING1 ",
        "body": [
            "LORS DE LA CONSTRUCTION DE LA ${1:STRING1}"
        ],
		"description": "Ajoute à l'image une instruction de déclenchement à exécuter ultérieurement, lorsque l'image est utilisée comme base pour une autre génération.",
		
	},
	"PARAMS": {
        "prefix": "params",
        "body": [
            "${STRING} ,"
        ],
		"description": "PARAMÈTRES",
		
	},
	"RUN": {
        "prefix": "VOUS RUN STRING ",
        "body": [
            "VOUS RUN ${1:STRING}"
        ],
		"description": "Exécute toutes les commandes dans un nouveau calque au-dessus de l'image actuelle et valide les résultats. L'image validée résultante sera utilisée pour la prochaine étape du Dockerfile.",
		
	},
	"SHELL": {
        "prefix": "SHELL PARAMS",
        "body": [
            "SHELL ${1:PARAMS}"
        ],
		"description": "Permet de remplacer le shell par défaut utilisé pour la forme shell des commandes.",
		
	},
	"START_VARIOUS": {
        "prefix": "J'AI BESOIN DE N CONTENANTS DE",
        "body": [
            "J'AI BESOIN DE $N ${1|CONTENANT,CONTENANTS|} DE ${2:CONTENANT1, CONTENANT2...} :\r",
            
            "${3:CONTENANT1: }"

            //"add_action('init', '$1');\r",
			//"/**\r",
			//" * $2\r",
			//" */\r",
			//"function $1(){\r",
			//"    $3\r",
        ],
        "description": "Règle de grammaire initiale",
        
	},
	"STOPSIGNAL": {
        "prefix": "STOPPING STRING/INT",
        "body": [
            "STOPPING ${1|STRING,INT|}"
        ],
		"description": "Définit le signal d'appel système qui sera envoyé au conteneur pour quitter.",
		
	},
	"STRING": {
        "prefix": "STRING",
        "body": [
            "${nombre:STRING}"
        ],
		"description": " ((a-z)*(A-Z)* (. , _ -  “ ‘)(0-9)*)*",
		
	},
	"VOLUME_UBI": {
        "prefix": "SUR LA LOCALISATION params",
        "body": [
            "SUR LA LOCALISATION ${1:params}"
        ],
		"description": "Crée un point de montage avec le nom spécifié et le marque comme contenant des volumes montés en externe à partir d'un hôte natif ou d'autres conteneurs.",
		
	},
	"USER": {
        "prefix": "POUR LES UTILISATEURS users",
        "body": [
            "POUR LES UTILISATEURS ${1:users}"
        ],
		"description": "Définit le nom d'utilisateur (ou UID) et éventuellement le groupe d'utilisateurs (ou GID) à utiliser lors de l'exécution de l'image et pour toutes les instructions RUN, CMD et ENTRYPOINT qui le suivent dans le Dockerfile.",
		
	},
	"VOLUME": {
        "prefix": "DANS LE VOLUME params",
        "body": [
            "DANS LE VOLUME ${1:params}"
        ],
		"description": "Crée un point de montage avec le nom spécifié et le marque comme contenant des volumes montés en externe à partir d'un hôte natif ou d'autres conteneurs.",
		
	},
	"WORKDIR": {
        "prefix": "DANS LE RÉPERTOIRE DE TRAVAIL DE STRING",
        "body": [
            "DANS LE RÉPERTOIRE DE TRAVAIL DE ${1:STRING}"
        ],
		"description": "Définit le répertoire de travail pour toutes les instructions RUN, CMD, ENTRYPOINT, COPY et ADD qui le suivent dans le Dockerfile.",
		
	},
  
}